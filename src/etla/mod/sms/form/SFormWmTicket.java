/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etla.mod.sms.form;

import etla.mod.SModConsts;
import etla.mod.sms.db.SDbWmTicket;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Alfredo PÃ©rez
 */
public class SFormWmTicket extends SBeanForm {
    
    private boolean mbIsArrivalImport = false;
    private boolean mbIsDepartureImport = false;

    private SDbWmTicket moRegistry;
    
    /**
     * Creates new form SFormCustomer
     * @param client
     * @param title
     */
    public SFormWmTicket(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT_READ, SModConsts.S_WM_TICKET, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelFields = new javax.swing.JPanel();
        jPanelTicket = new javax.swing.JPanel();
        jlTicket = new javax.swing.JLabel();
        sBeanTicketId = new sa.lib.gui.bean.SBeanFieldInteger();
        jButtonImport1 = new javax.swing.JButton();
        jButtonClean1 = new javax.swing.JButton();
        sBeanFieldBooleanTared = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanelItem = new javax.swing.JPanel();
        jlItem = new javax.swing.JLabel();
        jComboBoxItem = new javax.swing.JComboBox();
        jPanelPlates = new javax.swing.JPanel();
        jlPlate = new javax.swing.JLabel();
        moTextPlate = new sa.lib.gui.bean.SBeanFieldText();
        jPanelDriver = new javax.swing.JPanel();
        jlDriver = new javax.swing.JLabel();
        moTextDriver = new sa.lib.gui.bean.SBeanFieldText();
        jPanelCompany = new javax.swing.JPanel();
        jlCompany = new javax.swing.JLabel();
        moTextCompany = new sa.lib.gui.bean.SBeanFieldText();
        jPanelArrivalWeight = new javax.swing.JPanel();
        jlArrivalWeight = new javax.swing.JLabel();
        sBeanFieldDecimalArrival = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlUnit1 = new javax.swing.JLabel();
        jPanelDepartureWeight = new javax.swing.JPanel();
        jlDepartureWeight = new javax.swing.JLabel();
        sBeanFieldDecimalDeparture = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlUnit2 = new javax.swing.JLabel();
        jButtonImport2 = new javax.swing.JButton();
        jButtonClean2 = new javax.swing.JButton();
        jPanelArrivalWeight1 = new javax.swing.JPanel();
        jlArrivalWeightGross = new javax.swing.JLabel();
        sBeanFieldDecimalGross = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlUnit3 = new javax.swing.JLabel();
        jPanelArrivalDate = new javax.swing.JPanel();
        jlArrivalDate = new javax.swing.JLabel();
        sBeanFieldDatetimeArrival = new sa.lib.gui.bean.SBeanFieldDatetime();
        jPanelDepartureDate = new javax.swing.JPanel();
        jlDepartureDate = new javax.swing.JLabel();
        sBeanFieldDatetimeDeparture = new sa.lib.gui.bean.SBeanFieldDatetime();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 5));

        jPanelFields.setLayout(new java.awt.GridLayout(10, 1, 0, 5));

        jPanelTicket.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTicket.setText("Boleto:*");
        jlTicket.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelTicket.add(jlTicket);
        jPanelTicket.add(sBeanTicketId);

        jButtonImport1.setText("Importar de Revuelta");
        jButtonImport1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonImport1MouseClicked(evt);
            }
        });
        jPanelTicket.add(jButtonImport1);

        jButtonClean1.setText("Limpiar");
        jButtonClean1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClean1MouseClicked(evt);
            }
        });
        jPanelTicket.add(jButtonClean1);

        sBeanFieldBooleanTared.setText("Boleto tarado");
        sBeanFieldBooleanTared.setPreferredSize(new java.awt.Dimension(125, 23));
        sBeanFieldBooleanTared.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sBeanFieldBooleanTaredItemStateChanged(evt);
            }
        });
        jPanelTicket.add(sBeanFieldBooleanTared);

        jPanelFields.add(jPanelTicket);

        jPanelItem.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItem.setText("Tipo:*");
        jlItem.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelItem.add(jlItem);

        jComboBoxItem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Tipo-", "Entrada", "Salida" }));
        jComboBoxItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxItemItemStateChanged(evt);
            }
        });
        jPanelItem.add(jComboBoxItem);

        jPanelFields.add(jPanelItem);

        jPanelPlates.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPlate.setText("Placas:*");
        jlPlate.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelPlates.add(jlPlate);
        jPanelPlates.add(moTextPlate);

        jPanelFields.add(jPanelPlates);

        jPanelDriver.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDriver.setText("Chofer:*");
        jlDriver.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelDriver.add(jlDriver);

        moTextDriver.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanelDriver.add(moTextDriver);

        jPanelFields.add(jPanelDriver);

        jPanelCompany.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCompany.setText("Empresa:*");
        jlCompany.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelCompany.add(jlCompany);
        jPanelCompany.add(moTextCompany);

        jPanelFields.add(jPanelCompany);

        jPanelArrivalWeight.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlArrivalWeight.setText("Peso entrada:*");
        jlArrivalWeight.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelArrivalWeight.add(jlArrivalWeight);

        sBeanFieldDecimalArrival.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sBeanFieldDecimalArrivalFocusLost(evt);
            }
        });
        jPanelArrivalWeight.add(sBeanFieldDecimalArrival);

        jlUnit1.setText("kg");
        jPanelArrivalWeight.add(jlUnit1);

        jPanelFields.add(jPanelArrivalWeight);

        jPanelDepartureWeight.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDepartureWeight.setText("Peso salida:*");
        jlDepartureWeight.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelDepartureWeight.add(jlDepartureWeight);

        sBeanFieldDecimalDeparture.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sBeanFieldDecimalDepartureFocusLost(evt);
            }
        });
        jPanelDepartureWeight.add(sBeanFieldDecimalDeparture);

        jlUnit2.setText("kg");
        jPanelDepartureWeight.add(jlUnit2);

        jButtonImport2.setText("Importar de Revuelta");
        jButtonImport2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonImport2MouseClicked(evt);
            }
        });
        jPanelDepartureWeight.add(jButtonImport2);

        jButtonClean2.setText("Limpiar");
        jButtonClean2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClean2ActionPerformed(evt);
            }
        });
        jPanelDepartureWeight.add(jButtonClean2);

        jPanelFields.add(jPanelDepartureWeight);

        jPanelArrivalWeight1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlArrivalWeightGross.setText("Peso neto:*");
        jlArrivalWeightGross.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelArrivalWeight1.add(jlArrivalWeightGross);

        sBeanFieldDecimalGross.setEnabled(false);
        jPanelArrivalWeight1.add(sBeanFieldDecimalGross);

        jlUnit3.setText("kg");
        jPanelArrivalWeight1.add(jlUnit3);

        jPanelFields.add(jPanelArrivalWeight1);

        jPanelArrivalDate.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlArrivalDate.setText("Fecha entrada:*");
        jlArrivalDate.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelArrivalDate.add(jlArrivalDate);
        jPanelArrivalDate.add(sBeanFieldDatetimeArrival);

        jPanelFields.add(jPanelArrivalDate);

        jPanelDepartureDate.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDepartureDate.setText("Fecha salida:*");
        jlDepartureDate.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanelDepartureDate.add(jlDepartureDate);
        jPanelDepartureDate.add(sBeanFieldDatetimeDeparture);

        jPanelFields.add(jPanelDepartureDate);

        jPanel1.add(jPanelFields, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void sBeanFieldDecimalArrivalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sBeanFieldDecimalArrivalFocusLost
        sBeanFieldDecimalGross.setValue(calculateWeightGross());
    }//GEN-LAST:event_sBeanFieldDecimalArrivalFocusLost

    private void sBeanFieldDecimalDepartureFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sBeanFieldDecimalDepartureFocusLost
        sBeanFieldDecimalGross.setValue(calculateWeightGross());
    }//GEN-LAST:event_sBeanFieldDecimalDepartureFocusLost

    private void jButtonClean1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClean1MouseClicked
        actionCleanValues(1);
        mbIsArrivalImport = false;
        
    }//GEN-LAST:event_jButtonClean1MouseClicked

    private void jButtonClean2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClean2ActionPerformed
        actionCleanValues(2);
        mbIsDepartureImport = false;
        
    }//GEN-LAST:event_jButtonClean2ActionPerformed

    private void jButtonImport1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonImport1MouseClicked
        importRevueltaVallues(1);
        mbIsArrivalImport = true;
    }//GEN-LAST:event_jButtonImport1MouseClicked

    private void jButtonImport2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonImport2MouseClicked
        importRevueltaVallues(2);
        mbIsDepartureImport = true;
    }//GEN-LAST:event_jButtonImport2MouseClicked

    private void sBeanFieldBooleanTaredItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sBeanFieldBooleanTaredItemStateChanged
        isEnableTared();
    }//GEN-LAST:event_sBeanFieldBooleanTaredItemStateChanged

    private void jComboBoxItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxItemItemStateChanged
        moRegistry.setFkWmTicketTypeId(jComboBoxItem.getSelectedIndex());
    }//GEN-LAST:event_jComboBoxItemItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClean1;
    private javax.swing.JButton jButtonClean2;
    private javax.swing.JButton jButtonImport1;
    private javax.swing.JButton jButtonImport2;
    private javax.swing.JComboBox jComboBoxItem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelArrivalDate;
    private javax.swing.JPanel jPanelArrivalWeight;
    private javax.swing.JPanel jPanelArrivalWeight1;
    private javax.swing.JPanel jPanelCompany;
    private javax.swing.JPanel jPanelDepartureDate;
    private javax.swing.JPanel jPanelDepartureWeight;
    private javax.swing.JPanel jPanelDriver;
    private javax.swing.JPanel jPanelFields;
    private javax.swing.JPanel jPanelItem;
    private javax.swing.JPanel jPanelPlates;
    private javax.swing.JPanel jPanelTicket;
    private javax.swing.JLabel jlArrivalDate;
    private javax.swing.JLabel jlArrivalWeight;
    private javax.swing.JLabel jlArrivalWeightGross;
    private javax.swing.JLabel jlCompany;
    private javax.swing.JLabel jlDepartureDate;
    private javax.swing.JLabel jlDepartureWeight;
    private javax.swing.JLabel jlDriver;
    private javax.swing.JLabel jlItem;
    private javax.swing.JLabel jlPlate;
    private javax.swing.JLabel jlTicket;
    private javax.swing.JLabel jlUnit1;
    private javax.swing.JLabel jlUnit2;
    private javax.swing.JLabel jlUnit3;
    private sa.lib.gui.bean.SBeanFieldText moTextCompany;
    private sa.lib.gui.bean.SBeanFieldText moTextDriver;
    private sa.lib.gui.bean.SBeanFieldText moTextPlate;
    private sa.lib.gui.bean.SBeanFieldBoolean sBeanFieldBooleanTared;
    private sa.lib.gui.bean.SBeanFieldDatetime sBeanFieldDatetimeArrival;
    private sa.lib.gui.bean.SBeanFieldDatetime sBeanFieldDatetimeDeparture;
    private sa.lib.gui.bean.SBeanFieldDecimal sBeanFieldDecimalArrival;
    private sa.lib.gui.bean.SBeanFieldDecimal sBeanFieldDecimalDeparture;
    private sa.lib.gui.bean.SBeanFieldDecimal sBeanFieldDecimalGross;
    private sa.lib.gui.bean.SBeanFieldInteger sBeanTicketId;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */
    
    private void initComponentsCustom() {              
        SGuiUtils.setWindowBounds(this, 800, 500);
        String[] values = { "-Tipo-", "ENNTRADA", "SALIDA" };
        jComboBoxItem.setModel(new DefaultComboBoxModel<>(values));

//        jComboBoxItem.setKeySettings(miClient, SGuiUtils.getLabelName(jlItem), true);
        
        sBeanFieldBooleanTared.setValue(false);
        moTextDriver.setTextSettings(SGuiUtils.getLabelName(jlDriver), 50);
        moTextPlate.setTextSettings(SGuiUtils.getLabelName(jlPlate), 25);
        moTextCompany.setTextSettings(SGuiUtils.getLabelName(jlCompany), 50);

        moFields.addField(sBeanTicketId);
        moFields.addField(moTextDriver);
        moFields.addField(moTextPlate);
        moFields.addField(moTextCompany);

    }
    
    private void isEnableTared(){
        if(sBeanFieldBooleanTared.getValue() == true){
            sBeanFieldDecimalDeparture.setEnabled(true);
            sBeanFieldDatetimeDeparture.setEnabled(true);
            jButtonImport2.setEnabled(true);
            jButtonClean2.setEnabled(true);
        }else{
            sBeanFieldDecimalDeparture.setEnabled(false);
            sBeanFieldDatetimeDeparture.setEnabled(false);
            jButtonImport2.setEnabled(false);
            jButtonClean2.setEnabled(false);
        }
    }
    private double calculateWeightGross() {
        Double weightGross= sBeanFieldDecimalArrival.getValue() - sBeanFieldDecimalDeparture.getValue();
        
        if (sBeanFieldDecimalArrival.getValue() == 0 | sBeanFieldDecimalDeparture.getValue() == 0){
            weightGross = 0.0;
        } else {
            weightGross = sBeanFieldDecimalArrival.getValue() - sBeanFieldDecimalDeparture.getValue();
            if (weightGross < 0){
                weightGross *= -1;
            }
        }
        

    return weightGross;
    }
    
    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
//        miClient.getSession().populateCatalogue(jComboBoxItem, SModConsts.S_WM_TICKET, SLibConsts.UNDEFINED, null);
    }
    
    public void actionPerformed(ActionEvent evt) {
        if (evt.getSource() instanceof JButton) {
            JButton button = (JButton) evt.getSource();

            if ( button == jButtonClean1 ) {
                actionCleanValues(1);
            }
            else {
                if ( button == jButtonClean2){
                    actionCleanValues(2);
                }
            }
        }
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbWmTicket) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            sBeanTicketId.setValue(0);
            sBeanFieldBooleanTared.setValue(false);

            moTextPlate.setText("");
            moTextDriver.setText("");
            moTextCompany.setText("");
            jComboBoxItem.setSelectedIndex(0);
            sBeanFieldDecimalArrival.setValue(0.0);
            sBeanFieldDecimalDeparture.setValue(0.0);
            sBeanFieldDecimalGross.setValue(0.0);
            sBeanFieldDatetimeArrival.setValue(new Date());
            sBeanFieldDatetimeDeparture.setValue(new Date());
            sBeanFieldDecimalDeparture.setEnabled(false);
            sBeanFieldDatetimeDeparture.setEnabled(false);
            jButtonImport2.setEnabled(false);
            jButtonClean2.setEnabled(false);
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
            sBeanTicketId.setValue(moRegistry.getTicketId());

            jComboBoxItem.setSelectedIndex(moRegistry.getFkWmTicketTypeId());
            sBeanFieldBooleanTared.setValue(moRegistry.isTared());
            isEnableTared();
            moTextPlate.setText(moRegistry.getVehiclePlate());
            moTextDriver.setText(moRegistry.getDriverName());
            moTextCompany.setText(moRegistry.getCompany());
            sBeanFieldDecimalArrival.setValue(moRegistry.getWeightArrival());
            sBeanFieldDecimalDeparture.setValue(moRegistry.getWeightDeparture());
            sBeanFieldDecimalGross.setValue(moRegistry.getWeight());
            sBeanFieldDatetimeArrival.setValue(new Date());
            sBeanFieldDatetimeDeparture.setValue(new Date());
        }

        setFormEditable(true);

        addAllListeners();
    }

    @Override
    public SDbWmTicket getRegistry() throws Exception {
        SDbWmTicket registry = moRegistry.clone();

        registry.setPkWmTicketId(moRegistry.getPkWmTicketId());
        registry.setTicketId(sBeanTicketId.getValue());
        registry.setFkWmTicketTypeId(moRegistry.getFkWmTicketTypeId());
        registry.setTared(sBeanFieldBooleanTared.getValue());
        registry.setDriverName(moTextDriver.getValue());
        registry.setCompany(moTextCompany.getValue());
        registry.setVehiclePlate(moTextPlate.getValue());
        registry.setFkWmTicketTypeId(jComboBoxItem.getSelectedIndex());
        registry.setWeightArrival(sBeanFieldDecimalArrival.getValue());
        registry.setWeightDeparture(sBeanFieldDecimalDeparture.getValue());
//        registry.setWeight(sBeanFieldDecimalGross.getValue());
        registry.setTicketDatetimeArrival(sBeanFieldDatetimeArrival.getValue());
        registry.setTicketDatetimeDeparture(sBeanFieldDatetimeDeparture.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        Double weightGross= sBeanFieldDecimalArrival.getValue() - sBeanFieldDecimalDeparture.getValue();
        String a = jComboBoxItem.getSelectedItem().toString();
        if(jComboBoxItem.getSelectedIndex() == 0){
            validation.setMessage(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlItem) + "'.");
            validation.setComponent(jComboBoxItem);
        }
//        if ((a.equals("ENTRADA") & sBeanFieldDecimalArrival.getValue() > sBeanFieldDecimalDeparture.getValue() & weightGross != 0) | (a.equals("SALIDA") & sBeanFieldDecimalArrival.getValue() < sBeanFieldDecimalDeparture.getValue() & weightGross != 0)){
//            
//        }else{
//                validation.setMessage("Los pesos no corresponden con el tipo de movimiento indicado.");
//                validation.setComponent(jComboBoxItem);
//        }
        if (a.equals("ENTRADA") & sBeanFieldDecimalArrival.getValue() > sBeanFieldDecimalDeparture.getValue() & weightGross != 0){
        }
        else{
            if (a.equals("SALIDA") & sBeanFieldDecimalArrival.getValue() < sBeanFieldDecimalDeparture.getValue() & weightGross != 0){
            }
            else {
                validation.setMessage("Los pesos no corresponden con el tipo de movimiento indicado.");
                validation.setComponent(jComboBoxItem);
            }
        }
        return validation;
    }

    private void actionCleanValues(int type){
        switch (type){
            case 1:
                //Reset values
                sBeanTicketId.setValue(0);
                moTextPlate.setText("");
                moTextDriver.setText("");
                moTextCompany.setText("");
                jComboBoxItem.setSelectedIndex(0);
                sBeanFieldDecimalArrival.setValue(0.0);
                sBeanFieldDatetimeArrival.setValue(new Date());
                sBeanFieldDecimalGross.setValue(0.0);
                //Enable fields
                sBeanTicketId.setEditable(true);

                moTextPlate.setEditable(true);
                moTextDriver.setEditable(true);
                moTextCompany.setEditable(true);

                sBeanFieldDecimalArrival.setEditable(true);
                sBeanFieldDatetimeArrival.setEditable(true);
                break;
            case 2:
                //Reset values
                sBeanFieldDecimalDeparture.setValue(0.0);
                sBeanFieldDatetimeDeparture.setValue(new Date());
                //Enable fields
                sBeanFieldDecimalDeparture.setEditable(true);
                sBeanFieldDatetimeDeparture.setEditable(true);
                break;
            default:
                break;
        }
    }

    private void disableArrivalFields(){
        sBeanTicketId.setEditable(false);
        moTextPlate.setEditable(false);
        moTextDriver.setEditable(false);
        moTextCompany.setEditable(false);

        sBeanFieldDecimalArrival.setEditable(false);
        sBeanFieldDatetimeArrival.setEditable(false);
    }
    
    private void disableFields(){
        sBeanFieldDecimalDeparture.setEditable(false);
        sBeanFieldDatetimeDeparture.setEditable(false);
    }
    private static Connection moConnectionRevuelta;
    
    private void importRevueltaVallues(int x){
        Statement statement = null;
        ResultSet resulset = null;
        String ticket_id;
//        moConnectionRevuelta = SSmsUtils.openConnectionRevuelta(miClient.getSession());
        
        try {
            ticket_id = sBeanTicketId.getValue().toString();
            statement = moConnectionRevuelta.createStatement();
            String sql = "SELECT * FROM dba.Pesadas WHERE Pes_ID=" + ticket_id;
            resulset = statement.executeQuery(sql);
            
            if (resulset.next()) {
                
                resulset.getInt("Pes_ID");
                if ( x == 1 ) {
                moTextPlate.setValue(resulset.getString("Pes_placas"));
                moTextDriver.setValue(resulset.getString("Pes_chofer"));
                moTextCompany.setValue(resulset.getString("Emp_nombre"));
                sBeanFieldDecimalArrival.setValue(resulset.getDouble("Pes_pesoPri"));
                sBeanFieldDatetimeArrival.setValue(resulset.getTimestamp("Pes_FecHorPri"));
                
                disableArrivalFields();
                }else{
                    if( x == 2 ) {
                        sBeanFieldDecimalDeparture.setValue(resulset.getDouble("Pes_pesoSeg"));
                        sBeanFieldDatetimeDeparture.setValue(resulset.getTimestamp("Pes_FecHorSeg"));
                        disableFields();
                    }
                }
            }
            else{
//                XXX Message Error!
                miClient.showMsgBoxError("No se encontro ningun registro vinculado al boleto: " + sBeanTicketId.getValue().toString());
            }
            sBeanFieldDecimalGross.setValue(calculateWeightGross());
            moConnectionRevuelta.close();
        }catch (SQLException e) {
            SLibUtils.showException(this, e);
        }
    }
}
